name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            glibc: '2.17'

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            glibc: '2.17'

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: windows-latest
            target: aarch64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
    - name: Environment Variables
      run: |
        BINARY_NAME=rimeka
        BINARY_EXT=${{ runner.os == 'Windows' && '.exe' || '' }}

        ZIGBUILD_TARGET="${{ matrix.glibc && format('{0}.{1}', matrix.target, matrix.glibc) || matrix.target }}"
        OUTPUT_DIR="./target/${{ matrix.target }}/release"
        OUTPUT_FILE="$BINARY_NAME$BINARY_EXT"
        RELEASE_FILE="$BINARY_NAME-${{ matrix.target }}$BINARY_EXT"

        echo "ZIGBUILD_TARGET=$ZIGBUILD_TARGET" >> "$GITHUB_ENV"
        echo "OUTPUT_DIR=$OUTPUT_DIR" >> "$GITHUB_ENV"
        echo "OUTPUT_FILE=$OUTPUT_FILE" >> "$GITHUB_ENV"
        echo "RELEASE_FILE=$RELEASE_FILE" >> "$GITHUB_ENV"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        targets: ${{ matrix.target }}

    - name: Install Zig
      uses: mlugg/setup-zig@v1

    - name: Install Cargo Zigbuild
      run: cargo install cargo-zigbuild

    - name: Build
      run: cargo zigbuild --target="${{ env.ZIGBUILD_TARGET }}" --release

    - name: Rename
      working-directory: ${{ env.OUTPUT_DIR }}
      run: mv ${{ env.OUTPUT_FILE }} ${{ env.RELEASE_FILE }}

    - name: Release
      uses: softprops/action-gh-release@v2
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        files: ${{ env.OUTPUT_DIR }}/${{ env.RELEASE_FILE }}
